# -*- coding: utf-8 -*-
"""
Django settings for cobra_main project.

Generated by 'django-admin startproject' using Django 1.10.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import configparser
import djcelery
from django.utils.translation import ugettext_lazy as _

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '7(9#4oty&&)!8==#p+*cpr9=3q_k_r@n%kti&k39smwtf)qrh$'

# SECURITY WARNING: don't run with debug turned on in production!

confile = configparser.ConfigParser()
confile.read("cobra_main/config.ini")
DB_HOST = confile.get("database", "db_host")
DB_PORT = confile.getint("database", "db_port")
DB_NAME = confile.get("database", "db_name")
DB_USER = confile.get("database", "db_user")
DB_PASS = confile.get("database", "db_pass")

# Application definition
INSTALLED_APPS = [
    'suit',
    # 'rest_framework',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'widget_tweaks',
    'base_auth',
    'common',
    'cmdb',
]

MIDDLEWARE = [
    'django.contrib.admindocs.middleware.XViewMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'debug_toolbar.middleware.DebugToolbarMiddleware',
]

CMDB_PROJECT = os.path.join(BASE_DIR, 'cmdb')
COMMON_PROJECT = os.path.join(BASE_DIR, 'common')

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
            os.path.join(CMDB_PROJECT, 'templates'),
            os.path.join(COMMON_PROJECT, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'cobra_main.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.sqlite3',
#        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#    }
# }


DATABASES = {
     'default': {
         'ENGINE': 'django.db.backends.mysql',
         'NAME': 'cmdb',
         'USER': 'root',
         'PASSWORD': '123456',
         'HOST': 'mysql',
     }
}

# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

LANGUAGES = (
    ('zh-hans', _('Simplified Chinese')),
    ('en', _('English')),
)
LOCALE_PATHS = (
    os.path.join(BASE_DIR, "locale"),
)

ROOT_URLCONF = 'cobra_main.urls'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = 'static/'

STATICFILES_DIRS = (
    ('image', os.path.join(STATIC_ROOT, 'image').replace('\\', '/')),
    ('scripts', os.path.join(STATIC_ROOT, 'scripts').replace('\\', '/')),
    ('asserts', os.path.join(STATIC_ROOT, 'asserts').replace('\\', '/')),
    ('hplus', os.path.join(STATIC_ROOT, 'hplus').replace('\\', '/')),
    ('admin', os.path.join(STATIC_ROOT, 'admin').replace('\\', '/')),
    ('js', os.path.join(STATIC_ROOT, 'js').replace('\\', '/')),
    ('mptt', os.path.join(STATIC_ROOT, 'mptt').replace('\\', '/')),
)

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ]
}

DEBUG = True
ALLOWED_HOSTS = ['*']
SESSION_COOKIE_AGE = 60 * 60 * 24
SESSION_EXPIRE_AT_BROWSER_CLOSE = True
DEFAULT_LOGGER = 'default'
CORS_ORIGIN_ALLOW_ALL = True
LOGIN_URL = "/login/"

PER_PAGE = confile.getint('common', 'per_page')

###################################
EMAIL_HOST = confile.get('email', 'email_host')
EMAIL_PORT = confile.getint('email', 'email_port')
EMAIL_USER = confile.get('email', 'email_user')
EMAIL_PASS = confile.get('email', 'email_pass')
EMAIL_SUBJECT_PREFIX = confile.get('email', 'email_subject_prefix')
EMAIL_TLS = confile.get('email', 'email_tls')
EMAIL_BACKEND = confile.get('email', 'email_backend')
####################################

# celery settings
# celery中间人 redis://redis服务所在的ip地址:端口/数据库号
BROKER_URL = 'redis://127.0.0.1:6379/0'
# celery结果返回，可用于跟踪结果
CELERY_RESULT_BACKEND = 'redis://127.0.0.1:6379/1'
# celery内容等消息的格式设置
CELERY_ACCEPT_CONTENT = ['application/json', ]
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
# celery时区设置，使用settings中TIME_ZONE同样的时区
CELERY_TIMEZONE = TIME_ZONE
###################################

SUIT_CONFIG = {
    'ADMIN_NAME': 'Cobra 管理后台',
    'HEADER_DATE_FORMAT': 'l, j. F Y',  # Saturday, 16th March 2013
    'HEADER_TIME_FORMAT': 'H:i',  # 18:42
    'SHOW_REQUIRED_ASTERISK': False,
    'CONFIRM_UNSAVED_CHANGES': False,
    'MENU_OPEN_FIRST_CHILD': True,
    'MENU_EXCLUDE': ('auth.group', 'auth'),
    'LIST_PER_PAGE': 20,
    'MENU_ICONS': {
        'sites': 'icon-leaf',
        'auth': 'icon-lock',
    },
}

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django.db.backends': {
            'handlers': ['console'],
            # 'level': 'DEBUG' if DEBUG else 'INFO',
            'level': 'INFO',
        },
    },
}
